import java.io.DataInputStream;
import java.io.IOException;
import java.util.ArrayList;
import lejos.robotics.navigation.Waypoint;

/**
 * Dataa vastaanottava säie
 * @author Väinö Kojo, Sami Tuppurainen
 *
 */
public class DataIn extends Thread { 
	DataInputStream in;
	ArrayList<Waypoint> pisteet = new ArrayList<Waypoint>();

	private volatile boolean käynnissä = true;

	public DataIn() {
<<<<<<< .mine
||||||| .r157
=======

>>>>>>> .r173
	}
<<<<<<< .mine

	public DataIn(DataInputStream in) {
||||||| .r157
=======

	public DataIn(DataInputStream in) { // Saa input streamin parametrinaan.
>>>>>>> .r173
		this.in = in;
	}

	/**
	 * @return Palauttaa Waypoint listan
	 */
	public ArrayList<Waypoint> returnPisteet() {
		return pisteet;
	}

	/**
	 * Säie odottaa waypoint olioita tietokoneelta ja tallentaa ne listaan
	 * Kun viimeinen waypoint (-1, -1) tulee tietokoneelta lista on täysi ja säie suljetaan
	 */
	public void run() {
<<<<<<< .mine
		Waypoint wp = new Waypoint(10, 10);
		while (wp.getX() > 0) {
||||||| .r157
=======
		Waypoint wp = new Waypoint(10, 10); // Alustaa näytteenottopisteet.
		while (wp.getX() > 0) {
>>>>>>> .r173
			try {
<<<<<<< .mine
				wp.loadObject(in);
				pisteet.add(new Waypoint(wp.getX(), wp.getY()));
||||||| .r157
=======
				wp.loadObject(in); // Hakee Pc:ltä näytteenotto pisteet ja tallentaa ne listaan.
				
				pisteet.add(new Waypoint(wp.getX(), wp.getY()));

>>>>>>> .r173
			} catch (Exception e) {
				System.out.println("Exception odotetaan luettavaa");
			}
<<<<<<< .mine
		}  
||||||| .r157
=======
			
		}  
		lopeta();
>>>>>>> .r173
		

	}

	/**
	 * Sulkee säikeen
	 */
	public void lopeta() { 
		try {
			in.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
